.include "m328pdef.inc"

.org 0x0000
rjmp inicio

.equ f_cpu = 16000000
.equ baud = 9600
.equ bps = (F_CPU/16/baud) - 1

inicio:
       ldi r16, high(ramend)
       out SPH, r16
       ldi r16, low(ramend)
       out SPL, r16

       ldi r16, low(bps)
       ldi r17, high(bps)
       rcall initUART

menu:
     call preguntar
     call A
     call B
     call delay

wait:
     call getc
     cpi r16, 0
     breq wait
     ldi r18, 1
     add r16, r18
     rcall putc
     ldi r16, 0
     rjmp wait

initUART:
         sts UBRR0L, r16
         sts UBRR0H, r17
         ldi r16, (1<<RXEN0) | (1<<TXEN0)
         sts UCSR0B, r16
         ret

putc:
     lds r17, UCSR0A
     sbrs r17, UDRE0
     rjmp putc
     sts UDR0, r16
     ldi r16, 0
     ret

getc:
     lds r17, UCSR0A
     sbrs r17, UDRE0
     rjmp getc
     lds r16, UDR0
     ret

A:
  ldi r16, 'A'
  cpi r16, 'A'
  breq atajoA
  call delay

B:
  ldi r16, 'B'
  cpi r16, 'B'
  breq atajoB
  call delay

atajoA:
       call rombo

atajoB:
       call carita_feliz

preguntar:
         ldi r16, 'I'
         rcall putc

         ldi r16, 'n'
         rcall putc

         ldi r16, 'g'
         rcall putc

         ldi r16, 'r'
         rcall putc

         ldi r16, 'e'
         rcall putc

         ldi r16, 's'
         rcall putc

         ldi r16, 'e'
         rcall putc

         ldi r16, ' '
         rcall putc

         ldi r16, 'u'
         rcall putc

         ldi r16, 'n'
         rcall putc

         ldi r16, 'a'
         rcall putc

         ldi r16, ' '
         rcall putc

         ldi r16, 'o'
         rcall putc

         ldi r16, 'p'
         rcall putc

         ldi r16, 'c'
         rcall putc

         ldi r16, 'i'
         rcall putc

         ldi r16, 'o'
         rcall putc

         ldi r16, 'n'
         rcall putc

         ldi r16, '/'
         rcall putc

         ldi r16, 'A'
         rcall putc

         ldi r16, '-'
         rcall putc

         ldi r16, 'R'
         rcall putc

         ldi r16, 'o'
         rcall putc

         ldi r16, 'm'
         rcall putc

         ldi r16, 'b'
         rcall putc

         ldi r16, 'o'
         rcall putc

         ldi r16, '/'
         rcall putc

         ldi r16, 'B'
         rcall putc

         ldi r16, '-'
         rcall putc

         ldi r16, 'C'
         rcall putc

         ldi r16, 'a'
         rcall putc

         ldi r16, 'r'
         rcall putc

         ldi r16, 'a'
         rcall putc

         ldi r16, ' '
         rcall putc

         ldi r16, 'f'
         rcall putc

         ldi r16, 'e'
         rcall putc

         ldi r16, 'l'
         rcall putc

         ldi r16, 'i'
         rcall putc

         ldi r16, 'z'
         rcall putc

rombo:
     ldi r16, 0x00
     ldi r17, 0xe7
     out PORTB, r16
     out PORTD, r17
     rcall delay

     ldi r16, 0x01
     ldi r17, 0xc3
     out PORTB, r16
     out PORTD, r17
     rcall delay

     ldi r16, 0x02
     ldi r17, 0x81
     out PORTB, r16
     out PORTD, r17
     rcall delay

     ldi r16, 0x03
     ldi r17, 0x00
     out PORTB, r16
     out PORTD, r17
     rcall delay

     ldi r16, 0x04
     ldi r17, 0x00
     out PORTB, r16
     out PORTD, r17
     rcall delay

     ldi r16, 0x05
     ldi r17, 0x81
     out PORTB, r16
     out PORTD, r17
     rcall delay

     ldi r16, 0x06
     ldi r17, 0xc3
     out PORTB, r16
     out PORTD, r17
     rcall delay

     ldi r16, 0x07
     ldi r17, 0xe7
     out PORTB, r16
     out PORTD, r17
     rcall delay

     rjmp inicio ; Saltar al inicio del bucle principal

carita_feliz:
;Previa ExplicaciÃ³n
;Cada linea de la matriz contiene el mismo codigo , pero diferentes valores para los registros y puertos
;El registro r16 junto al Puerto B se encarga de manejar el multiplexor y asi indicar que linea prender
;El registro r17 junto al Puerto D se encarga de que led del dibujo encender
    ;Primera linea de la matriz
    ldi r16,0x00        ;Carga 0x00 en registro 16
    ldi r17,0xff        ;Carga 0x99 en registro 17
    out PORTB,r16       ;Configura el puerto B con los datos del registro 16
    out PORTD,r17       ;Configura el puerto D con los datos del registro 17
    rcall delay         ;Llama a deley

    ;Segunda linea de la matriz
    ldi r16,0x01        ;Carga 0x00 en registro 16
    ldi r17,0xdb        ;Carga 0x99 en registro 17
    out PORTB,r16       ;Configura el puerto B con los datos del registro 16
    out PORTD,r17       ;Configura el puerto D con los datos del registro 17
    rcall delay          ;Llama a deley

    ;Tercera linea de la matriz
    ldi r16,0x02        ;Carga 0x00 en registro 16
    ldi r17,0xdb        ;Carga 0x99 en registro 17
    out PORTB,r16       ;Configura el puerto B con los datos del registro 16
    out PORTD,r17       ;Configura el puerto D con los datos del registro 17
    rcall delay          ;Llama a deley

    ;Cuarta linea de la matriz
    ldi r16,0x03        ;Carga 0x00 en registro 16
    ldi r17,0xff        ;Carga 0x99 en registro 17
    out PORTB,r16       ;Configura el puerto B con los datos del registro 16
    out PORTD,r17       ;Configura el puerto D con los datos del registro 17
    rcall delay          ;Llama a deley

    ;Quinta linea de la matriz
    ldi r16,0x04        ;Carga 0x00 en registro 16
    ldi r17,0xff        ;Carga 0x99 en registro 17
    out PORTB,r16       ;Configura el puerto B con los datos del registro 16
    out PORTD,r17       ;Configura el puerto D con los datos del registro 17
    rcall delay          ;Llama a deley

    ;Sexta linea de la matriz
    ldi r16,0x05        ;Carga 0x00 en registro 16
    ldi r17,0xbd        ;Carga 0x99 en registro 17
    out PORTB,r16       ;Configura el puerto B con los datos del registro 16
    out PORTD,r17       ;Configura el puerto D con los datos del registro 17
    rcall delay          ;Llama a deley

    ;Septima linea de la matriz
    ldi r16,0x06        ;Carga 0x00 en registro 16
    ldi r17,0xc3        ;Carga 0x99 en registro 17
    out PORTB,r16       ;Configura el puerto B con los datos del registro 16
    out PORTD,r17       ;Configura el puerto D con los datos del registro 17
    rcall delay          ;Llama a deley

    ;Octava linea de la matriz
    ldi r16,0x07        ;Carga 0x00 en registro 16
    ldi r17,0xff        ;Carga 0x99 en registro 17
    out PORTB,r16       ;Configura el puerto B con los datos del registro 16
    out PORTD,r17       ;Configura el puerto D con los datos del registro 17
    rcall delay          ;Llama a deley

    rjmp inicio     ;Saltar a main_loop


delay: ldi r23, 20 ; Cargar el valor inicial en r23
loop3: ldi r22, 20 ; Cargar el valor inicial en r22
loop2: ldi r21, 20 ; Cargar el valor inicial en r21
loop1: dec r21 ; Decrementar r21
       brne loop1 ; Si r21 != 0, saltar al siguiente bucle
       dec r22 ; Decrementar r22
       brne loop2 ; Si r22 != 0, saltar al siguiente bucle
       dec r23 ; Decrementar r23
       brne loop3 ; Si r23 != 0, saltar al siguiente bucle
       ret ; Regresar de la subrutina
